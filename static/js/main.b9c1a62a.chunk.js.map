{"version":3,"sources":["Particle.tsx","App.tsx","index.tsx"],"names":["Particle","posX","posY","hue","className","style","left","bottom","background","gravity","now","Date","getTime","App","React","useState","children","mouse","x","y","on","touch","lastUserSpark","lastIdleSpark","state","setState","setTouch","setMouseOn","newState","undefined","createSpark","force","timeString","String","spark","keyBody","i","push","window","innerHeight","velX","unit","Math","random","velY","key","length","t","padStart","innerWidth","useEffect","counter","ticker","setInterval","map","node","filter","clearInterval","id","onMouseDown","e","clientX","clientY","onMouseMove","onMouseUp","onTouchStart","touches","item","onTouchMove","onTouchEnd","onClick","abs","ReactDOM","render","document","getElementById"],"mappings":"qOAoBeA,G,MAXmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC/C,OAAO,yBACLC,UAAU,WACVC,MAAO,CACLC,KAAY,IAANL,EAAW,KACjBM,OAAc,IAANL,EAAW,KACnBM,WAAW,OAAD,OAASL,EAAT,qBCLVM,G,MAAU,YAFG,GAEoB,IA+BjCC,EAAM,kBAAO,IAAIC,MAAQC,WA4HhBC,EAzHO,WAAO,IAAD,EACAC,IAAMC,SAAgB,CAC9CC,SAAU,GACVC,MAAO,CACLC,EAAG,EACHC,EAAG,EACHC,IAAI,GAENC,MAAO,GACPC,cAAeZ,IACfa,cAAeb,MAVS,mBACnBc,EADmB,KACZC,EADY,KAapBC,EAAW,SAACL,GAAD,OAAoBI,GAAS,SAAAD,GAC5C,OAAO,eAAIA,EAAX,CAAkBH,cAUdM,EAAa,SAACP,EAAaF,EAAYC,GAA1B,OAAyCM,GAAS,SAAAD,GACnE,IAAMI,EAAQ,eAAOJ,GAIrB,OAHAI,EAASX,MAAMG,GAAKA,OACVS,IAANX,IAAiBU,EAASX,MAAMC,EAAIA,QAC9BW,IAANV,IAAiBS,EAASX,MAAME,EAAIA,GACjCS,MAGHE,EAAc,SAACC,GAAD,OAAqBN,GAAS,SAAAD,GAChD,IAAMI,EAAQ,eAAOJ,GACfQ,EAAaC,OAAOvB,KACpBwB,EAAQ,SAAChB,EAAWC,EAAWgB,GACnC,IAAK,IAAIC,EAAE,EAAGA,EArED,EAqEiBA,IAC5BR,EAASZ,SAASqB,KAAK,CACrBpC,KAAMiB,EAAGoB,OAAOC,YAChBrC,MAAOoC,OAAOC,YAAapB,GAAImB,OAAOC,YACtCC,KAxESC,OAwEFC,KAAKC,SAAU,IACtBC,KAzESH,OAyEFC,KAAKC,SAAU,IACtBE,IAAKV,EAASC,KAIpB,GAAIZ,EAAMP,MAAMG,IAAMI,EAAMH,MAAMyB,OAAS,GAAKf,EAAO,CAErD,IAAK,IAAMK,KADXR,EAASN,cAAgBZ,IACTc,EAAMH,MAAO,CAC3B,IAAM0B,EAAIvB,EAAMH,MAAMe,GACtBF,EAAMa,EAAE7B,EAAG6B,EAAE5B,EAAGa,EAAYC,OAAOG,GAAGY,SAAS,EAAG,MAEhDxB,EAAMP,MAAMG,IAAIc,EAAMV,EAAMP,MAAMC,EAAGM,EAAMP,MAAME,EAAGa,EAAYC,OAAOT,EAAMH,MAAMyB,QAAQE,SAAS,EAAG,WAE3GtC,IAAOc,EAAMF,cA5FC,KA6FdZ,IAAOc,EAAMD,cA5FE,MA8FfK,EAASL,cAAgBb,IACzBwB,EACqB,GAAnBI,OAAOW,WACa,GAApBX,OAAOC,YACP,OAGJ,OAAOX,MAwBT,OAVAd,IAAMoC,WAAU,WACd,IAAIC,EAAU,EACRC,EAASC,aAAY,WAbH5B,GAAS,SAAAD,GACjC,IAAMI,EAAQ,eAAOJ,GAOrB,OANAI,EAASZ,SAAWQ,EAAMR,SAASsC,KAAI,SAAAC,GAIrC,OAHAA,EAAKX,MAAQnC,EACb8C,EAAKtD,MAAQsD,EAAKf,KAClBe,EAAKrD,MAAQqD,EAAKX,KACXW,KACNC,QAAO,SAAAD,GAAI,OAAIA,EAAKrD,KAAO,KACvB0B,KAQW,KADhBuB,GAAWA,EAAS,GArHJ,IAsHGrB,MAClB,IAxHY,IAyHf,OAAO,kBAAM2B,cAAcL,MAC1B,IAEI,yBACLM,GAAG,MACHC,YAAa,SAAAC,GAAC,OAAIjC,GAAW,EAAMiC,EAAEC,QAASD,EAAEE,UAChDC,YAAa,SAAAH,GAAC,OA1EK1C,EA0EW0C,EAAEC,QA1EF1C,EA0EWyC,EAAEE,QA1ECrC,GAAS,SAAAD,GACrD,IAAMI,EAAQ,eAAOJ,GAGrB,OAFAI,EAASX,MAAMC,EAAIA,EACnBU,EAASX,MAAME,EAAIA,EACZS,KAJW,IAACV,EAAWC,GA2E9B6C,UAAW,kBAAMrC,GAAW,IAC5BsC,aAAc,SAAAL,GAEZ,IADA,IAAMvC,EAAiB,GACde,EAAE,EAAGA,EAAIwB,EAAEM,QAAQpB,OAAQV,IAAK,CACvC,IAAM+B,EAAOP,EAAEM,QAAQC,KAAK/B,GAC5Bf,EAAMgB,KAAK,CAAEnB,EAAGiD,EAAKN,QAAS1C,EAAGgD,EAAKL,UAExCpC,EAASL,IAEX+C,YAAa,SAAAR,GAEX,IADA,IAAMvC,EAAiB,GACde,EAAE,EAAGA,EAAIwB,EAAEM,QAAQpB,OAAQV,IAAK,CACvC,IAAM+B,EAAOP,EAAEM,QAAQC,KAAK/B,GAC5Bf,EAAMgB,KAAK,CAAEnB,EAAGiD,EAAKN,QAAS1C,EAAGgD,EAAKL,UAExCpC,EAASL,IAEXgD,WAAY,kBAAM3C,EAAS,KAC3B4C,QAAS,kBAAMxC,GAAY,KAE1BN,EAAMR,SAASsC,KAAI,SAACC,EAAMnB,GAAP,OAAa,kBAAC,EAAD,CAC/BS,IAAKU,EAAKV,IACV5C,KAAMsD,EAAKtD,KACXC,KAAMqD,EAAKrD,KACXC,IAA2B,KAArBuC,KAAK6B,IAAIhB,EAAKX,MAxJP,UCJnB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b9c1a62a.chunk.js","sourcesContent":["import React from 'react';\nimport './Particle.css';\n\ninterface Props {\n  posX: number;\n  posY: number;\n  hue: number;\n}\n\nconst Particle: React.FC<Props> = ({ posX, posY, hue }) => {\n  return <div\n    className='particle'\n    style={{\n      left: posX *100 +'vh',\n      bottom: posY *100 +'vh',\n      background: `hsl(${hue}, 100%, 66%)`\n    }}\n  ></div>;\n};\n\nexport default Particle;\n","import React from 'react';\nimport Particle from './Particle';\nimport './App.css';\n\n\nconst unit = .05;\nconst idleTimeout = 10000;                  // milliseconds\nconst idleInterval = 5000;                  // milliseconds\nconst renderRate = 60;                      // per second\nconst inputInterval = 4;                    // renders\nconst gravity = 10 *unit /renderRate **2;   // per render^2\nconst sparkCount = 3;\nconst sparkForce = unit *.03;\n\n\ninterface Node {\n  posX: number,\n  posY: number,\n  velX: number,\n  velY: number,\n  key: string\n}\n\ninterface Touch {\n  x: number,\n  y: number\n}\n\ninterface State {\n  children: Node[],\n  mouse: {\n    x: number,\n    y: number,\n    on: boolean\n  },\n  touch: Touch[],\n  lastUserSpark: number,\n  lastIdleSpark: number\n}\n\n\nconst now = () => (new Date()).getTime();\n\n\nconst App: React.FC = () => {\n  const [state, setState] = React.useState<State>({\n    children: [],\n    mouse: {\n      x: 0,\n      y: 0,\n      on: false\n    },\n    touch: [],\n    lastUserSpark: now(),\n    lastIdleSpark: now()\n  });\n\n  const setTouch = (touch: Touch[]) => setState(state => {\n    return {...state, touch};\n  });\n\n  const setMousePos = (x: number, y: number) => setState(state => {\n    const newState = {...state};\n    newState.mouse.x = x;\n    newState.mouse.y = y;\n    return newState;\n  });\n\n  const setMouseOn = (on: boolean, x?: number, y?: number) => setState(state => {\n    const newState = {...state};\n    newState.mouse.on = on;\n    if (x !== undefined) newState.mouse.x = x;\n    if (y !== undefined) newState.mouse.y = y;\n    return newState;\n  });\n\n  const createSpark = (force?: boolean) => setState(state => {\n    const newState = {...state};\n    const timeString = String(now());\n    const spark = (x: number, y: number, keyBody: string) => {\n      for (let i=0; i < sparkCount; i++) {\n        newState.children.push({\n          posX: x /window.innerHeight,\n          posY: (window.innerHeight -y) /window.innerHeight,\n          velX: (Math.random() -.5) *sparkForce,\n          velY: (Math.random() -.3) *sparkForce,\n          key: keyBody +i\n        });\n      }\n    };\n    if (state.mouse.on || state.touch.length > 0 || force) {\n      newState.lastUserSpark = now();\n      for (const i in state.touch) {\n        const t = state.touch[i];\n        spark(t.x, t.y, timeString +String(i).padStart(2, '0'));\n      }\n      if (state.mouse.on) spark(state.mouse.x, state.mouse.y, timeString +String(state.touch.length).padStart(2, '0'));\n    } else if (\n      now() -state.lastUserSpark > idleTimeout &&\n      now() -state.lastIdleSpark > idleInterval\n    ) {\n      newState.lastIdleSpark = now();\n      spark(\n        window.innerWidth *.5,\n        window.innerHeight *.1,\n        '00'\n      );\n    }\n    return newState;\n  });\n\n  const renderNodes = () => setState(state => {\n    const newState = {...state};\n    newState.children = state.children.map(node => {\n      node.velY -= gravity;\n      node.posX += node.velX;\n      node.posY += node.velY;\n      return node;\n    }).filter(node => node.posY > 0);\n    return newState;\n  });\n\n  React.useEffect(() => {\n    let counter = 0;\n    const ticker = setInterval(() => {\n      renderNodes();\n      counter = (counter +1) %inputInterval;\n      if (counter === 0) createSpark();\n    }, 1000 /renderRate);\n    return () => clearInterval(ticker);\n  }, []);\n\n  return <div\n    id=\"app\"\n    onMouseDown={e => setMouseOn(true, e.clientX, e.clientY)}\n    onMouseMove={e => setMousePos(e.clientX, e.clientY)}\n    onMouseUp={() => setMouseOn(false)}\n    onTouchStart={e => {\n      const touch: Touch[] = [];\n      for (let i=0; i < e.touches.length; i++) {\n        const item = e.touches.item(i);\n        touch.push({ x: item.clientX, y: item.clientY });\n      }\n      setTouch(touch);\n    }}\n    onTouchMove={e => {\n      const touch: Touch[] = [];\n      for (let i=0; i < e.touches.length; i++) {\n        const item = e.touches.item(i);\n        touch.push({ x: item.clientX, y: item.clientY });\n      }\n      setTouch(touch);\n    }}\n    onTouchEnd={() => setTouch([])}\n    onClick={() => createSpark(true)}\n  >\n    {state.children.map((node, i) => <Particle\n      key={node.key}\n      posX={node.posX}\n      posY={node.posY}\n      hue={-Math.abs(node.velY) *360 *renderRate}\n    />)}\n  </div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}