{"version":3,"sources":["Particle.tsx","App.tsx","index.tsx"],"names":["Particle","posX","posY","hue","className","style","left","bottom","background","gravity","now","Date","getTime","App","React","useState","children","mouse","x","y","on","lastUserSpark","lastIdleSpark","state","setState","setMousePos","newState","setMouseOn","undefined","createSpark","force","spark","i","push","window","innerHeight","velX","Math","random","velY","innerWidth","renderPhysics","map","node","filter","useEffect","ticker","setInterval","clearInterval","id","onMouseMove","e","clientX","clientY","onMouseDown","onMouseUp","onTouchMove","touches","onTouchStart","onTouchEnd","onClick","abs","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57c8aaa5.chunk.js","sourcesContent":["import React from 'react';\nimport './Particle.css';\n\ninterface Props {\n  posX: number;\n  posY: number;\n  hue: number;\n}\n\nconst Particle: React.FC<Props> = ({ posX, posY, hue }) => {\n  return <div\n    className='particle'\n    style={{\n      left: posX *100 +'vh',\n      bottom: posY *100 +'vh',\n      background: `hsl(${hue}, 100%, 66%)`\n    }}\n  ></div>;\n};\n\nexport default Particle;\n","import React from 'react';\nimport Particle from './Particle';\nimport './App.css';\n\n\nconst unit = .05;\nconst idleTimeout = 10000;                  // milliseconds\nconst idleInterval = 5000;                  // milliseconds\nconst inputRate = 10;                       // per second\nconst renderRate = 60;                      // per second\nconst gravity = 10 *unit /renderRate **2;   // per render^2\nconst sparkCount = 3;\nconst sparkForce = unit *.05;\n\n\ninterface Physics {\n  posX: number;\n  posY: number;\n  velX: number;\n  velY: number;\n}\n\ninterface State {\n  children: Physics[],\n  mouse: {\n    x: number,\n    y: number,\n    on: boolean\n  },\n  lastUserSpark: number,\n  lastIdleSpark: number\n}\n\n\nconst now = () => (new Date()).getTime();\n\n\nconst App: React.FC = () => {\n  const [state, setState] = React.useState<State>({\n    children: [],\n    mouse: {\n      x: 0,\n      y: 0,\n      on: false\n    },\n    lastUserSpark: now(),\n    lastIdleSpark: now()\n  });\n\n  const setMousePos = (x: number, y: number) => setState(state =>{\n    const newState = {...state};\n    newState.mouse.x = x;\n    newState.mouse.y = y;\n    return newState;\n  });\n\n  const setMouseOn = (on: boolean, x?: number, y?: number) => setState(state =>{\n    const newState = {...state};\n    newState.mouse.on = on;\n    if (x !== undefined) newState.mouse.x = x;\n    if (y !== undefined) newState.mouse.y = y;\n    return newState;\n  });\n\n  const createSpark = (force: boolean) => setState(state => {\n    const newState = {...state};\n    const spark = (x: number, y: number) => {\n      for (let i=0; i < sparkCount; i++) {\n        newState.children.push({\n          posX: x /window.innerHeight,\n          posY: (window.innerHeight -y) /window.innerHeight,\n          velX: (Math.random() -.5) *sparkForce,\n          velY: (Math.random() -.3) *sparkForce\n        });\n      }\n    };\n    if (state.mouse.on || force) {\n      newState.lastUserSpark = now();\n      spark(state.mouse.x, state.mouse.y);\n    } else if (\n      now() -state.lastUserSpark > idleTimeout &&\n      now() -state.lastIdleSpark > idleInterval\n    ) {\n      newState.lastIdleSpark = now();\n      spark(\n        window.innerWidth *.5,\n        window.innerHeight *.1\n      );\n    }\n    return newState;\n  });\n\n  const renderPhysics = () => setState(state => {\n    const newState = {...state};\n    newState.children = state.children.map(node => {\n      node.velY -= gravity;\n      node.posX += node.velX;\n      node.posY += node.velY;\n      return node;\n    }).filter(node => node.posY > 0);\n    return newState;\n  });\n\n  React.useEffect(() => {\n    const ticker = setInterval(renderPhysics, 1000 /renderRate);\n    return () => clearInterval(ticker);\n  }, []);\n\n  React.useEffect(() => {\n    const ticker = setInterval(createSpark, 1000 /inputRate);\n    return () => clearInterval(ticker);\n  }, []);\n\n  return <div\n    id=\"app\"\n    onMouseMove={e => setMousePos(e.clientX, e.clientY)}\n    onMouseDown={e => setMouseOn(true, e.clientX, e.clientY)}\n    onMouseUp={() => setMouseOn(false)}\n    onTouchMove={e => setMousePos(e.touches[0].clientX, e.touches[0].clientY)}\n    onTouchStart={e => setMouseOn(true, e.touches[0].clientX, e.touches[0].clientY)}\n    onTouchEnd={() => setMouseOn(false)}\n    onClick={() => createSpark(true)}\n  >\n    {state.children.map((node, i) => <Particle\n      posX={node.posX}\n      posY={node.posY}\n      hue={-Math.abs(node.velY) *360 *66}\n      key={i}\n    />)}\n  </div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}